{"ast":null,"code":"var _jsxFileName = \"/Users/riyanarayan/Documents/GitHub/lunchApp2/src/UserAccount/component.js\";\nimport React, { Component } from 'react';\nimport LunchCenter from '../LunchCenter/component';\n\nclass UserAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: false,\n      userInfo: [{\n        id: 'firstName',\n        name: 'First Name',\n        value: ''\n      }, {\n        id: 'lastName',\n        name: 'Last Name',\n        value: ''\n      }, {\n        id: 'email',\n        name: 'Email',\n        value: ''\n      }, {\n        id: 'password',\n        name: 'Password',\n        value: ''\n      }, {\n        id: 'gender',\n        name: 'Gender',\n        value: true //true for female\n\n      }, {\n        id: 'campus',\n        name: 'School Campus',\n        value: ''\n      }, {\n        id: 'affiliation',\n        name: 'Affiliation',\n        value: true //true for student\n\n      }, {\n        id: 'phoneNumber',\n        name: 'Phone Number',\n        value: Number\n      }]\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onChange(i, e, name) {\n    const arr = this.state.userInfo;\n    arr[i] = {\n      'id': e.id,\n      'name': name,\n      'value': e.value\n    };\n    this.setState({\n      userInfo: arr\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); //would make the API call here with the entered email and password and check if the user exists\n    //give them an alert if its the wrong password or username and let them try 3 times\n    //only set this to empty string if its the correct username and password\n\n    this.onChange(2, {\n      id: 'email',\n      value: ''\n    }, 'Email');\n    this.onChange(3, {\n      id: 'password',\n      value: ''\n    }, 'Password');\n  }\n\n  onClick() {\n    this.setState({\n      newUser: !this.state.newUser\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          newUser = _this$state.newUser,\n          userInfo = _this$state.userInfo;\n    console.log(\"looks e\", userInfo[0]);\n    return React.createElement(\"div\", {\n      className: \"login-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, newUser ? React.createElement(\"form\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      className: \"email field\",\n      placeholder: \"\",\n      value: userInfo[2].value,\n      onChange: e => {\n        this.onChange(2, e.target, 'Email');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: \"password field\",\n      value: userInfo[3].value,\n      onChange: e => {\n        this.onChange(3, e.target, 'Password');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"submit button\",\n      value: \"Login\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      className: \"signup button\",\n      value: \"Sign up\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"signup-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"userinfo-fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" \", userInfo.map(({\n      id,\n      name,\n      value\n    }, i) => {\n      return React.createElement(\"div\", {\n        className: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, name), typeof value != 'boolean' ? React.createElement(\"input\", {\n        type: \"text\",\n        id: id,\n        key: i,\n        placeholder: \" \",\n        value: value,\n        onChange: e => {\n          this.onChange(i, e.target, name);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }) : id === 'gender' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Male\"), React.createElement(\"input\", {\n        type: \"radio\",\n        checked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Female\"), React.createElement(\"input\", {\n        type: \"radio\",\n        checked: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Male\", React.createElement(\"input\", {\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))) //                                     <label class=\"container\">One\n      //   <input type=\"radio\" checked=\"checked\" name=\"radio\">\n      //   <span class=\"checkmark\"></span>\n      // </label>\n      // <label class=\"container\">Two\n      //   <input type=\"radio\" name=\"radio\">\n      //   <span class=\"checkmark\"></span>\n      // </label>\n      );\n    })), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Sign up\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })));\n  }\n\n} // Things to change (Sept 28):\n// need to figure out placeholder thing for inputs \n// need to check if eslint is actually working\n// make the gender and affiliation things toggle buttons\n// main component file, and then reducers are for the api (this will be in the outer file)\n// and then we need actions, which will also be in the outer file\n// selectors are necessary to use the action call to get the data which we get from the api\n// container should just be to do mapStateToProps and mapDispatchToProps (using the selector)\n// then theres the component and the style.scss file\n// do we want to have different endpoints for the url (for login, signup, etc)\n\n\nexport default UserAccount;","map":{"version":3,"sources":["/Users/riyanarayan/Documents/GitHub/lunchApp2/src/UserAccount/component.js"],"names":["React","Component","LunchCenter","UserAccount","constructor","props","state","newUser","userInfo","id","name","value","Number","onChange","bind","onSubmit","onClick","i","e","arr","setState","preventDefault","render","console","log","target","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport LunchCenter from '../LunchCenter/component'\n\nclass UserAccount extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newUser: false,\n            userInfo: [\n                {\n                    id: 'firstName',\n                    name: 'First Name',\n                    value: ''\n                },\n                {\n                    id: 'lastName',\n                    name: 'Last Name',\n                    value: ''\n                },\n                {\n                    id: 'email',\n                    name: 'Email',\n                    value: ''\n                },\n                {\n                    id: 'password',\n                    name: 'Password',\n                    value: ''\n                },\n                {\n                    id: 'gender',\n                    name: 'Gender',\n                    value: true //true for female\n                },\n                {\n                    id: 'campus',\n                    name: 'School Campus',\n                    value: ''\n                },\n                {\n                    id: 'affiliation',\n                    name: 'Affiliation',\n                    value: true //true for student\n                },\n                {\n                    id: 'phoneNumber',\n                    name: 'Phone Number',\n                    value: Number\n                }\n            ]\n        }\n        \n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    onChange(i, e, name) {\n        const arr = this.state.userInfo\n        arr[i] = {\n            'id': e.id,\n            'name': name,\n            'value': e.value\n        }\n        this.setState({\n            userInfo: arr\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        //would make the API call here with the entered email and password and check if the user exists\n        //give them an alert if its the wrong password or username and let them try 3 times\n        //only set this to empty string if its the correct username and password\n        this.onChange(2, {id: 'email', value: ''}, 'Email');\n        this.onChange(3, {id: 'password', value: ''}, 'Password');\n    }\n\n    onClick() {\n        this.setState({ newUser: !this.state.newUser })\n    }\n\n  render() {\n    const { newUser, userInfo } = this.state\n    console.log(\"looks e\", userInfo[0])\n\n    return (\n        <div className=\"login-component\">\n            { newUser ?\n            <form className=\"login-container\">\n                <input type=\"email\" id=\"email\" className='email field' placeholder='' value={userInfo[2].value}\n                  onChange={(e) => {this.onChange(2, e.target, 'Email')}} />\n                <input type=\"password\" id=\"password\" className='password field' value={userInfo[3].value}\n                  onChange={(e) => {this.onChange(3, e.target, 'Password')}} />\n                <input type=\"submit\" className='submit button' value=\"Login\" onClick={this.onSubmit} />\n                <input type=\"button\" className='signup button' value=\"Sign up\" onClick={this.onClick} />\n            </form>\n            : <div className='signup-component'>\n                    <div className='userinfo-fields'> {\n                        userInfo.map(({id, name, value}, i) => {\n                            return <div className={id}>\n                                <label>{name}</label>\n                                {\n                                    typeof value != 'boolean' ?\n                                    <input type='text' id={id} key={i} placeholder=' '\n                                      value={value} onChange={(e) => {this.onChange(i, e.target, name)}} />\n                                    : id === 'gender' ?\n                                    <div>\n                                        <label>Male</label>\n                                        <input type='radio' checked={true} />\n                                        <label>Female</label>\n                                        <input type='radio' checked={false} />\n                                    </div>\n                                    : \n                                    \n                                    \n                                    <div>\n                                        <label>\n                                            Male\n                                            <input type='radio' />\n                                        </label>\n                                        {/* <input type='radio' value='Male' />\n                                        <input type='radio' value='Female' /> */}\n                                        {/* <input type='radio' id={el} key={i} value='Male'>Male</input> */}\n                                        {/* <input type='radio' id={el} key={i} value='Female'>Female</input> */}\n                                    </div>\n\n\n\n\n//                                     <label class=\"container\">One\n//   <input type=\"radio\" checked=\"checked\" name=\"radio\">\n//   <span class=\"checkmark\"></span>\n// </label>\n// <label class=\"container\">Two\n//   <input type=\"radio\" name=\"radio\">\n//   <span class=\"checkmark\"></span>\n// </label>\n\n\n\n\n\n                                }\n                            </div>\n                        })\n                    }</div>\n                    <input type=\"button\" value=\"Sign up\" onClick={this.onClick} />\n            </div>}\n            {/* <LunchCenter /> */}\n            </div>\n    )\n  }\n}\n\n// Things to change (Sept 28):\n// need to figure out placeholder thing for inputs \n// need to check if eslint is actually working\n// make the gender and affiliation things toggle buttons\n\n\n\n// main component file, and then reducers are for the api (this will be in the outer file)\n// and then we need actions, which will also be in the outer file\n// selectors are necessary to use the action call to get the data which we get from the api\n// container should just be to do mapStateToProps and mapDispatchToProps (using the selector)\n// then theres the component and the style.scss file\n\n// do we want to have different endpoints for the url (for login, signup, etc)\n\n\n\nexport default UserAccount"]},"metadata":{},"sourceType":"module"}