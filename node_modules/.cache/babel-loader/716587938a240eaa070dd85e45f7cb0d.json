{"ast":null,"code":"import _defineProperty from \"/Users/riyanarayan/Documents/GitHub/lunchApp2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/riyanarayan/Documents/GitHub/lunchApp2/src/UserAccount/component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\n\nclass UserAccount extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        firstName: String,\n        lastName: String,\n        email: String,\n        password: String,\n        gender: Boolean,\n        school: String,\n        affiliation: Boolean\n      }\n    };\n  }\n\n  onChange(e) {\n    this.setState({\n      user: _objectSpread({}, this.state.user, {\n        email: e.target.value\n      })\n    });\n  }\n\n  render() {\n    const user = this.state.user;\n    console.log('the state', user);\n    return React.createElement(\"div\", {\n      className: \"login-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      value: \"Email\",\n      onChange: this.onChange(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"password\",\n      value: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n  }\n\n} // main component file, and then reducers are for the api (this will be in the outer file)\n// and then we need actions, which will also be in the outer file\n// selectors are necessary to use the action call to get the data which we get from the api\n// container should just be to do mapStateToProps and mapDispatchToProps (using the selector)\n// then theres the component and the style.scss file\n// do we want to have different endpoints for the url (for login, signup, etc)\n\n\nexport default UserAccount;","map":{"version":3,"sources":["/Users/riyanarayan/Documents/GitHub/lunchApp2/src/UserAccount/component.js"],"names":["React","Component","UserAccount","state","user","firstName","String","lastName","email","password","gender","Boolean","school","affiliation","onChange","e","setState","target","value","render","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCE,KADgC,GACxB;AACJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,SAAS,EAAEC,MADT;AAEFC,QAAAA,QAAQ,EAAED,MAFR;AAGFE,QAAAA,KAAK,EAAEF,MAHL;AAIFG,QAAAA,QAAQ,EAAEH,MAJR;AAKFI,QAAAA,MAAM,EAAEC,OALN;AAMFC,QAAAA,MAAM,EAAEN,MANN;AAOFO,QAAAA,WAAW,EAAEF;AAPX;AADF,KADwB;AAAA;;AAahCG,EAAAA,QAAQ,CAACC,CAAD,EAAI;AACR,SAAKC,QAAL,CAAc;AACVZ,MAAAA,IAAI,oBAAM,KAAKD,KAAL,CAAWC,IAAjB;AAAuBI,QAAAA,KAAK,EAAEO,CAAC,CAACE,MAAF,CAASC;AAAvC;AADM,KAAd;AAGH;;AAEHC,EAAAA,MAAM,GAAG;AAAA,UACGf,IADH,GACY,KAAKD,KADjB,CACGC,IADH;AAELgB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBjB,IAAzB;AAEF,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,KAAK,EAAC,OAApC;AAA4C,MAAA,QAAQ,EAAE,KAAKU,QAAL,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,UAAtB;AAAiC,MAAA,KAAK,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ;AASD;;AAhCiC,C,CAoCpC;AACA;AACA;AACA;AACA;AAEA;;;AAIA,eAAeZ,WAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass UserAccount extends Component {\n    state = {\n        user: {\n            firstName: String,\n            lastName: String,\n            email: String,\n            password: String,\n            gender: Boolean,\n            school: String,\n            affiliation: Boolean\n        }\n    };\n\n    onChange(e) {\n        this.setState({\n            user: {...this.state.user, email: e.target.value}\n        })\n    }\n\n  render() {\n      const { user } = this.state\n      console.log('the state', user)\n\n    return (\n        <div className=\"login-component\">\n            <form className=\"login-container\">\n                <input type=\"text\" id=\"email\" value=\"Email\" onChange={this.onChange()} />\n                <input type=\"text\" id=\"password\" value=\"Password\" />\n                <input type=\"submit\" value=\"Login\" />\n            </form>\n        </div>\n    )\n  }\n}\n\n\n// main component file, and then reducers are for the api (this will be in the outer file)\n// and then we need actions, which will also be in the outer file\n// selectors are necessary to use the action call to get the data which we get from the api\n// container should just be to do mapStateToProps and mapDispatchToProps (using the selector)\n// then theres the component and the style.scss file\n\n// do we want to have different endpoints for the url (for login, signup, etc)\n\n\n\nexport default UserAccount"]},"metadata":{},"sourceType":"module"}