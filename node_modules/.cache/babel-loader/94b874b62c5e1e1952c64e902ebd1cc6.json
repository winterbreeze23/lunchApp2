{"ast":null,"code":"var _jsxFileName = \"/Users/riyanarayan/Documents/GitHub/lunchApp2/src/UserAccount/component.js\";\nimport React, { Component } from 'react';\n\nclass UserAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: false,\n      email: 'Email',\n      password: 'Password'\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  } // state = {\n  //     email: ''\n  //     // // user: {\n  //     //     firstName: String,\n  //     //     lastName: String,\n  //     //     email: {},\n  //     //     password: String,\n  //     //     gender: Boolean,\n  //     //     school: String,\n  //     //     affiliation: Boolean\n  //     // // }\n  // };\n\n\n  onChange(e) {\n    // console.log(e.target, e.target.value);\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n    console.log(this.state);\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); // console.log('submit', e.target);\n\n    console.log('email:', this.state.email);\n    console.log('password:', this.state.password);\n    this.setState({\n      email: 'Email',\n      password: 'Password'\n    });\n  }\n\n  onClick() {\n    this.setState({\n      newUser: true\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          newUser = _this$state.newUser,\n          email = _this$state.email,\n          password = _this$state.password; // console.log('the state', user)\n\n    return React.createElement(\"div\", {\n      className: \"login-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, !newUser ? React.createElement(\"form\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Sign up\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"signup-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n} // main component file, and then reducers are for the api (this will be in the outer file)\n// and then we need actions, which will also be in the outer file\n// selectors are necessary to use the action call to get the data which we get from the api\n// container should just be to do mapStateToProps and mapDispatchToProps (using the selector)\n// then theres the component and the style.scss file\n// do we want to have different endpoints for the url (for login, signup, etc)\n\n\nexport default UserAccount;","map":{"version":3,"sources":["/Users/riyanarayan/Documents/GitHub/lunchApp2/src/UserAccount/component.js"],"names":["React","Component","UserAccount","constructor","props","state","newUser","email","password","onChange","bind","onSubmit","onClick","e","setState","target","id","value","console","log","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass UserAccount extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newUser: false,\n            email: 'Email',\n            password: 'Password'\n        }\n        \n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.onClick = this.onClick.bind(this)\n    }\n    // state = {\n    //     email: ''\n    //     // // user: {\n    //     //     firstName: String,\n    //     //     lastName: String,\n    //     //     email: {},\n    //     //     password: String,\n    //     //     gender: Boolean,\n    //     //     school: String,\n    //     //     affiliation: Boolean\n    //     // // }\n    // };\n\n    onChange(e) {\n        // console.log(e.target, e.target.value);\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n        console.log(this.state)\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        // console.log('submit', e.target);\n        console.log('email:', this.state.email)\n        console.log('password:', this.state.password)\n        this.setState({\n            email: 'Email',\n            password: 'Password'\n        })\n    }\n\n    onClick() {\n        this.setState({ newUser: true })\n    }\n\n  render() {\n      const { newUser, email, password } = this.state\n      // console.log('the state', user)\n\n    return (\n        <div className=\"login-component\">\n            { !newUser ?\n            <form className=\"login-container\">\n                <input type=\"email\" id=\"email\" value={this.state.email} onChange={this.onChange} />\n                <input type=\"password\" id=\"password\" value={this.state.password} onChange={this.onChange} />\n                <input type=\"submit\" value=\"Login\" onClick={this.onSubmit} />\n                <input type=\"button\" value=\"Sign up\" onClick={this.onClick} />\n            </form>\n            :\n        <div className=\"signup-component\">\n\n        </div>}\n        </div>\n\n    )\n  }\n}\n\n\n// main component file, and then reducers are for the api (this will be in the outer file)\n// and then we need actions, which will also be in the outer file\n// selectors are necessary to use the action call to get the data which we get from the api\n// container should just be to do mapStateToProps and mapDispatchToProps (using the selector)\n// then theres the component and the style.scss file\n\n// do we want to have different endpoints for the url (for login, signup, etc)\n\n\n\nexport default UserAccount"]},"metadata":{},"sourceType":"module"}