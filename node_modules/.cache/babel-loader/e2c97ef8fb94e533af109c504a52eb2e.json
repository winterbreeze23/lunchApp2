{"ast":null,"code":"import _defineProperty from \"/Users/riyanarayan/Documents/GitHub/lunchApp2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/riyanarayan/Documents/GitHub/lunchApp2/src/UserAccount/component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport LunchCenter from '../LunchCenter/component';\n\nclass UserAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: false,\n      userInfo: [{\n        id: 'firstName',\n        name: 'First Name',\n        value: String\n      }, {\n        id: 'lastName',\n        name: 'Last Name',\n        value: String\n      }, {\n        id: 'email',\n        name: 'Email',\n        value: String\n      }, {\n        id: 'password',\n        name: 'Password',\n        value: String\n      }, {\n        id: 'gender',\n        name: 'Password',\n        value: Boolean //true for female\n\n      }, {\n        id: 'campus',\n        name: 'School Campus',\n        value: String\n      }, {\n        id: 'affiliation',\n        name: 'Affiliation',\n        value: Boolean //true for student\n\n      }, {\n        id: 'phoneNumber',\n        name: 'Phone Number',\n        value: Number\n      }]\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      userInfo: _objectSpread({}, this.state.userInfo, {\n        [e.target.id]: e.target.value\n      })\n    });\n    console.log(this.state);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log('email:', this.state.email);\n    console.log('password:', this.state.password); //would make the API call here with the entered email and password and check if the user exists\n    //give them an alert if its the wrong password or username and let them try 3 times\n\n    this.setState({\n      userInfo: _objectSpread({}, this.state.userInfo, {\n        email: '',\n        password: ''\n      })\n    });\n  }\n\n  onClick() {\n    this.setState({\n      newUser: !this.state.newUser\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          newUser = _this$state.newUser,\n          email = _this$state.email,\n          password = _this$state.password; // console.log('the state', user)\n\n    const userInfo = [{\n      id: 'firstName',\n      name: 'First Name'\n    }, 'lastName', 'email', 'password', 'gender', 'school', 'affiliation'];\n    return React.createElement(\"div\", {\n      className: \"login-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, !newUser ? React.createElement(\"form\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      placeholder: \"\",\n      value: this.state.email,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Sign up\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"signup-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"userinfo-fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" \", userInfo.map(({\n      id,\n      name\n    }, i) => {\n      return React.createElement(\"div\", {\n        className: el,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, el), typeof this.state[el] != 'boolean' ? React.createElement(\"input\", {\n        type: \"text\",\n        id: el,\n        key: i,\n        placeholder: \" \",\n        value: this.state[el],\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })));\n    })), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Sign up\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(LunchCenter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  }\n\n} // Things to change (Sept 28):\n// need to figure out placeholder thing for inputs \n// need to check if eslint is actually working\n// make the gender and affiliation things toggle buttons\n// main component file, and then reducers are for the api (this will be in the outer file)\n// and then we need actions, which will also be in the outer file\n// selectors are necessary to use the action call to get the data which we get from the api\n// container should just be to do mapStateToProps and mapDispatchToProps (using the selector)\n// then theres the component and the style.scss file\n// do we want to have different endpoints for the url (for login, signup, etc)\n\n\nexport default UserAccount;","map":{"version":3,"sources":["/Users/riyanarayan/Documents/GitHub/lunchApp2/src/UserAccount/component.js"],"names":["React","Component","LunchCenter","UserAccount","constructor","props","state","newUser","userInfo","id","name","value","String","Boolean","Number","onChange","bind","onSubmit","onClick","e","setState","target","console","log","preventDefault","email","password","render","map","i","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport LunchCenter from '../LunchCenter/component'\n\nclass UserAccount extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newUser: false,\n            userInfo: [\n                {\n                    id: 'firstName',\n                    name: 'First Name',\n                    value: String\n                },\n                {\n                    id: 'lastName',\n                    name: 'Last Name',\n                    value: String\n                },\n                {\n                    id: 'email',\n                    name: 'Email',\n                    value: String\n                },\n                {\n                    id: 'password',\n                    name: 'Password',\n                    value: String\n                },\n                {\n                    id: 'gender',\n                    name: 'Password',\n                    value: Boolean //true for female\n                },\n                {\n                    id: 'campus',\n                    name: 'School Campus',\n                    value: String\n                },\n                {\n                    id: 'affiliation',\n                    name: 'Affiliation',\n                    value: Boolean //true for student\n                },\n                {\n                    id: 'phoneNumber',\n                    name: 'Phone Number',\n                    value: Number\n                }\n            ]\n        }\n        \n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.onClick = this.onClick.bind(this)\n    }\n\n    onChange(e) {\n        this.setState({\n            userInfo: {\n                ...this.state.userInfo,\n                [e.target.id]: e.target.value\n            }\n        })\n        console.log(this.state)\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        console.log('email:', this.state.email)\n        console.log('password:', this.state.password)\n\n        //would make the API call here with the entered email and password and check if the user exists\n        //give them an alert if its the wrong password or username and let them try 3 times\n\n        \n        this.setState({\n            userInfo: {\n                ...this.state.userInfo,\n                email: '',\n                password: ''\n            }\n        })\n    }\n\n    onClick() {\n        this.setState({ newUser: !this.state.newUser })\n    }\n\n  render() {\n      const { newUser, email, password } = this.state\n      // console.log('the state', user)\n      const userInfo = [\n          { id: 'firstName', name: 'First Name' }, 'lastName', 'email', 'password', 'gender', 'school', 'affiliation']\n\n    return (\n        <div className=\"login-component\">\n            { !newUser ?\n            <form className=\"login-container\">\n                <input type=\"email\" id=\"email\" placeholder='' value={this.state.email} onChange={this.onChange} />\n                <input type=\"password\" id=\"password\" value={this.state.password} onChange={this.onChange} />\n                <input type=\"submit\" value=\"Login\" onClick={this.onSubmit} />\n                <input type=\"button\" value=\"Sign up\" onClick={this.onClick} />\n            </form>\n            : <div className='signup-component'>\n                    <div className='userinfo-fields'> {\n                        userInfo.map(({id, name}, i) => {\n                            return <div className={el}>\n                                <label>{el}</label>\n                                {\n                                    typeof this.state[el] != 'boolean' ?\n                                    <input type='text' id={el} key={i} placeholder=' '\n                                      value={this.state[el]} onChange={this.onChange} />\n                                    : <div>\n                                        <input type='radio' value='Male' />\n                                        <input type='radio' value='Female' />\n                                        {/* <input type='radio' id={el} key={i} value='Male'>Male</input> */}\n                                        {/* <input type='radio' id={el} key={i} value='Female'>Female</input> */}\n                                    </div>\n                                }\n                            </div>\n                        })\n                    }</div>\n                    <input type=\"button\" value=\"Sign up\" onClick={this.onClick} />\n            </div>}\n            <LunchCenter />\n            </div>\n    )\n  }\n}\n\n// Things to change (Sept 28):\n// need to figure out placeholder thing for inputs \n// need to check if eslint is actually working\n// make the gender and affiliation things toggle buttons\n\n\n\n// main component file, and then reducers are for the api (this will be in the outer file)\n// and then we need actions, which will also be in the outer file\n// selectors are necessary to use the action call to get the data which we get from the api\n// container should just be to do mapStateToProps and mapDispatchToProps (using the selector)\n// then theres the component and the style.scss file\n\n// do we want to have different endpoints for the url (for login, signup, etc)\n\n\n\nexport default UserAccount"]},"metadata":{},"sourceType":"module"}