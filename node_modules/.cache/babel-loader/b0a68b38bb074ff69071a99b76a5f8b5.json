{"ast":null,"code":"var _jsxFileName = \"/Users/riyanarayan/Documents/GitHub/lunchApp2/src/UserAccount/component.js\";\nimport React, { Component } from 'react';\n\nclass UserAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: 'Email',\n      password: 'Password'\n    };\n    this.onChange = this.onChange.bind(this);\n  } // state = {\n  //     email: ''\n  //     // // user: {\n  //     //     firstName: String,\n  //     //     lastName: String,\n  //     //     email: {},\n  //     //     password: String,\n  //     //     gender: Boolean,\n  //     //     school: String,\n  //     //     affiliation: Boolean\n  //     // // }\n  // };\n\n\n  onChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  render() {\n    const user = this.state.user;\n    console.log('the state', user);\n    return React.createElement(\"div\", {\n      className: \"login-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n} // main component file, and then reducers are for the api (this will be in the outer file)\n// and then we need actions, which will also be in the outer file\n// selectors are necessary to use the action call to get the data which we get from the api\n// container should just be to do mapStateToProps and mapDispatchToProps (using the selector)\n// then theres the component and the style.scss file\n// do we want to have different endpoints for the url (for login, signup, etc)\n\n\nexport default UserAccount;","map":{"version":3,"sources":["/Users/riyanarayan/Documents/GitHub/lunchApp2/src/UserAccount/component.js"],"names":["React","Component","UserAccount","constructor","props","state","email","password","onChange","bind","e","console","log","target","value","setState","render","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,OADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH,GAT+B,CAUhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAD,EAAAA,QAAQ,CAACE,CAAD,EAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACA,SAAKC,QAAL,CAAc;AACVT,MAAAA,KAAK,EAAEI,CAAC,CAACG,MAAF,CAASC;AADN,KAAd;AAGH;;AAEHE,EAAAA,MAAM,GAAG;AAAA,UACGC,IADH,GACY,KAAKZ,KADjB,CACGY,IADH;AAELN,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,IAAzB;AAEF,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,KAAhD;AAAuD,MAAA,QAAQ,EAAE,KAAKE,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,UAAtB;AAAiC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QAAnD;AAA6D,MAAA,QAAQ,EAAE,KAAKC,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ;AASD;;AA3CiC,C,CA+CpC;AACA;AACA;AACA;AACA;AAEA;;;AAIA,eAAeN,WAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass UserAccount extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: 'Email',\n            password: 'Password'\n        }\n        \n        this.onChange = this.onChange.bind(this);\n    }\n    // state = {\n    //     email: ''\n    //     // // user: {\n    //     //     firstName: String,\n    //     //     lastName: String,\n    //     //     email: {},\n    //     //     password: String,\n    //     //     gender: Boolean,\n    //     //     school: String,\n    //     //     affiliation: Boolean\n    //     // // }\n    // };\n\n    onChange(e) {\n        console.log(e.target.value);\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n  render() {\n      const { user } = this.state\n      console.log('the state', user)\n\n    return (\n        <div className=\"login-component\">\n            <form className=\"login-container\">\n                <input type=\"text\" id=\"email\" value={this.state.email} onChange={this.onChange} />\n                <input type=\"text\" id=\"password\" value={this.state.password} onChange={this.onChange} />\n                <input type=\"submit\" value=\"Login\" />\n            </form>\n        </div>\n    )\n  }\n}\n\n\n// main component file, and then reducers are for the api (this will be in the outer file)\n// and then we need actions, which will also be in the outer file\n// selectors are necessary to use the action call to get the data which we get from the api\n// container should just be to do mapStateToProps and mapDispatchToProps (using the selector)\n// then theres the component and the style.scss file\n\n// do we want to have different endpoints for the url (for login, signup, etc)\n\n\n\nexport default UserAccount"]},"metadata":{},"sourceType":"module"}